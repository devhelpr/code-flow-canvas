{
  "schemaType": "flow",
  "schemaVersion": "0.0.1",
  "id": "1234",
  "flows": {
    "flow": {
      "flowType": "flow",
      "nodes": [
        {
          "id": "f030a86e-2280-4b12-8615-4644f98cb625",
          "x": 3218.510068723205,
          "y": 1079.3107144634794,
          "width": 239.99997153991202,
          "height": 216.00006052597433,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "variable",
            "formValues": {
              "variableName": "data",
              "initialValue": "",
              "fieldType": "array",
              "fieldValueType": "number"
            },
            "isVariable": true,
            "nodeCannotBeReplaced": true
          }
        },
        {
          "id": "693410e0-2810-4237-b888-07ea51248a6e",
          "x": 3605.68753580387,
          "y": 1102.179755079369,
          "width": 240.00001968446617,
          "height": 96.00000787378647,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "variable",
            "formValues": {
              "variableName": "clusters",
              "initialValue": "",
              "fieldType": "array",
              "fieldValueType": "array"
            },
            "isVariable": true,
            "nodeCannotBeReplaced": true
          }
        },
        {
          "id": "dab880f1-662c-4e23-98eb-4b374ca84e68",
          "x": 3901.659453834542,
          "y": 1076.8259188667582,
          "width": 239.9996207820869,
          "height": 216.00015776640078,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "variable",
            "formValues": {
              "variableName": "centroids",
              "initialValue": "",
              "fieldType": "array",
              "fieldValueType": "number"
            },
            "isVariable": true,
            "nodeCannotBeReplaced": true
          }
        },
        {
          "id": "2b646b69-3b5d-41b0-b1bf-65cff9b6898b",
          "x": 4026.857581870388,
          "y": 1712.8127032300897,
          "width": 200,
          "height": 64,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "set-array-variable",
            "formValues": {
              "variableName": "data"
            },
            "nodeCannotBeReplaced": false,
            "showFormOnlyInPopup": true,
            "useInCompositionOnly": false
          }
        },
        {
          "id": "3b1c2a61-436e-4625-93e9-8e6117ba0424",
          "x": 2948.003739242402,
          "y": 1092.1766682834289,
          "width": 119.99980456246743,
          "height": 84.00003051249662,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "variable",
            "formValues": {
              "variableName": "k",
              "initialValue": "5",
              "fieldType": "value",
              "fieldValueType": "number"
            },
            "isVariable": true,
            "nodeCannotBeReplaced": true
          }
        },
        {
          "id": "ea7bdf4e-6c33-48f4-b633-bff38ffb2a3c",
          "x": 5012.936333470498,
          "y": 1710.9236203121095,
          "width": 200,
          "height": 64,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "set-array-variable",
            "formValues": {
              "variableName": "centroids"
            },
            "nodeCannotBeReplaced": false,
            "showFormOnlyInPopup": true,
            "useInCompositionOnly": false
          }
        },
        {
          "id": "d68aeeb6-d2b2-4503-a704-7d21334b9c7f",
          "x": 7381.717938333617,
          "y": 1408.466620794737,
          "width": 541.607184260587,
          "height": 520.5699638027584,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "iframe-html-node",
            "formValues": {
              "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Plot visualization</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n      .wrapper {\n        display: flex;\n        flex-direction: row;\n        gap: 4px;\n        height: 100vh;\n        align-items: center;\n        justify-content: center;\n        padding: 4px;\n      }\n    </style>\n  </head>\n  <body class=\"bg-white\">\n    <div class=\"min-h-screen flex wrapper\" id=\"inner\">\n      <svg\n        id=\"svg\"\n        class=\"object-cover h-full w-full\"\n        viewbox=\"0 0 1200 1200\"\n      ></svg>\n    </div>\n\n    <script>\n      // Define the colors for the clusters .. borrowed the d3-palette colors observable10\n      let colors = [\n        '#4269d0',\n        '#efb118',\n        '#ff725c',\n        '#6cc5b0',\n        '#3ca951',\n        '#ff8ab7',\n        '#a463f2',\n        '#97bbf5',\n        '#9c6b4e',\n        '#9498a0',\n      ];\n      function getColor(index) {\n        return colors[index % colors.length];\n      }\n\n      function getDarkenColor(index) {\n        // darken color with pure javascript\n        let color = colors[index % colors.length];\n        let r = parseInt(color.slice(1, 3), 16);\n        let g = parseInt(color.slice(3, 5), 16);\n        let b = parseInt(color.slice(5, 7), 16);\n\n        const newColor = [r, g, b].map((c) => parseInt((c * 0.75).toFixed(0)));\n\n        return `#${newColor[0].toString(16)}${newColor[1].toString(\n          16\n        )}${newColor[2].toString(16)}`;\n      }\n      // Initialize the global variable \"input\"\n      window.input = window.input;\n      let inputstream = [];\n      let initialized = false;\n      let elements = [];\n      let svg = document.getElementById('svg');\n      // Function to rerender the UI\n      function rerenderUI() {\n        if (!initialized && window['createElement']) {\n          initialized = true;\n        }\n        let documentFragment = document.createDocumentFragment();\n        if (window.input !== undefined && window.input.clusters) {\n          if (Array.isArray(window.input.clusters)) {\n            window.input.clusters.forEach((element, index) => {\n              if (Array.isArray(element)) {\n                element.forEach((point, i) => {\n                  if (Array.isArray(point)) {\n                    let circle = document.createElementNS(\n                      'http://www.w3.org/2000/svg',\n                      'circle'\n                    );\n                    circle.setAttribute('cx', point[0] * 10 + 100);\n                    circle.setAttribute('cy', point[1] * 10 + 100);\n                    circle.setAttribute('r', 25);\n                    circle.setAttribute('fill', getColor(index));\n                    documentFragment.appendChild(circle);\n                  }\n                });\n              }\n            });\n            if (window.input.centroids) {\n              window.input.centroids.forEach((element, index) => {\n                if (Array.isArray(element)) {\n                  let circle = document.createElementNS(\n                    'http://www.w3.org/2000/svg',\n                    'circle'\n                  );\n                  circle.setAttribute('cx', element[0] * 10 + 100);\n                  circle.setAttribute('cy', element[1] * 10 + 100);\n                  circle.setAttribute('r', 50);\n                  circle.setAttribute('fill-opacity', \"50%\"); \n                  circle.setAttribute('fill', getDarkenColor(index));\n                  documentFragment.appendChild(circle);\n                }\n              });\n            }\n          }\n        }\n        svg.replaceChildren(documentFragment);\n      }\n\n      // Attach the rerenderUI function to the global onExecute method\n      window.onExecute = rerenderUI;\n\n      rerenderUI();\n    </script>\n  </body>\n</html>\n",
              "aiprompt": ""
            },
            "showFormOnlyInPopup": true,
            "initializeOnStartFlow": true
          }
        },
        {
          "id": "8a5cfde7-22fd-4f25-8af4-4540f69e3c8f",
          "x": 5721.680464640531,
          "y": 1659.6576691336236,
          "width": 110,
          "height": 110,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "map",
            "formValues": {}
          }
        },
        {
          "id": "1d1b2896-c11d-4ddd-a4b8-1d3b77e493ba",
          "x": 5924.359698349896,
          "y": 1765.7883444118866,
          "width": 200,
          "height": 112,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "expression",
            "formValues": {
              "expression": "[]",
              "inputType": "number"
            },
            "showFormOnlyInPopup": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "ab054f77-2e88-49ec-afe6-848468c0be3c",
          "x": 5925.051508209566,
          "y": 1630.4898975210604,
          "width": 200,
          "height": 64,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "set-array-variable",
            "formValues": {
              "variableName": "clusters"
            },
            "nodeCannotBeReplaced": false,
            "showFormOnlyInPopup": true,
            "useInCompositionOnly": false
          }
        },
        {
          "id": "6373efe5-c0de-4674-8e62-94917080c536",
          "x": 5757.601118793454,
          "y": 2943.490624551205,
          "width": 508.1330465348832,
          "height": 135.9999670418412,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "register-expression-function-node",
            "formValues": {
              "functionName": "assign_points_to_clusters",
              "customFunctionCode": "(centroids, points, clusters) => {\n  if (\n    Array.isArray(centroids) &&\n    Array.isArray(points) &&\n    Array.isArray(clusters)\n  ) {\n    let result = [...clusters];\n\n    points.forEach((point) => {\n      let distances = [];\n      centroids.forEach((vector) => {\n        const distance = Math.sqrt(\n          Math.pow(point[0] - vector[0], 2) + Math.pow(point[1] - vector[1], 2)\n        );\n        distances.push(distance);\n      });\n      let minimum = -1;\n      let minIndex = -1;\n      distances.forEach((distance, index) => {\n        if (minimum == -1 || distance < minimum) {\n          minimum = distance;\n          minIndex = index;\n        }\n      });\n      if (minIndex >= 0 && minIndex < clusters.length) {\n        result[minIndex].push(point);\n      }\n    });\n    return {\n      clusters: result,\n      centroids: centroids\n    }\n  }\n  return  {\n    clusters: [],\n    centroids: []\n  };\n};\n"
            },
            "nodeCannotBeReplaced": true,
            "showFormOnlyInPopup": true,
            "useInCompositionOnly": false,
            "isRunOnStart": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "5a697c29-8f0b-4b8f-b251-29d389d4b606",
          "x": 6314.426498783223,
          "y": 1603.2007610146404,
          "width": 467.59282779498153,
          "height": 131.57610086277032,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "expression",
            "formValues": {
              "expression": "assign_points_to_clusters(centroids,data,clusters)",
              "inputType": "number"
            },
            "showFormOnlyInPopup": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "d074bb8f-1693-45b6-80ab-e5ed4557c4fa",
          "x": 6997.1068187887195,
          "y": 1641.399733371719,
          "width": 120.00000984223308,
          "height": 271.9999562915616,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "show-input",
            "formValues": {
              "name": "output",
              "data-type": "default"
            },
            "initializeOnStartFlow": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "0e543618-6d2d-4cef-84f8-62431f40847d",
          "x": 6470.189713445235,
          "y": 2933.285649037258,
          "width": 394.2265625,
          "height": 136,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "register-expression-function-node",
            "formValues": {
              "functionName": "calculate_centroids",
              "customFunctionCode": "(clusters, centroids, iterationCount) => {\n  let newcentroids = [];\n  clusters.forEach((cluster) => {\n    let sumX = 0;\n    let sumY = 0;\n    cluster.forEach((point) => {\n      sumX += point[0];\n      sumY += point[1];\n    });\n    newcentroids.push([sumX / cluster.length, sumY / cluster.length]);\n  });\n  let centroidsfound = [];\n  newcentroids.forEach((newcentroid) => {\n    centroids.forEach((oldcentroid, index) => {\n      const indexWasMatchedForOtherCentrod =\n        centroidsfound.findIndex((centroidIndex) => index === centroidIndex) >=\n        0;\n      if (\n        !indexWasMatchedForOtherCentrod &&\n        oldcentroid[0] === newcentroid[0] &&\n        oldcentroid[1].toFixed(5) === newcentroid[1].toFixed(5)\n      ) {\n        centroidsfound.push(index);\n      }\n    });\n  });\n  \n  const converged = (centroidsfound.length === newcentroids.length) || (iterationCount >= 15);\n  console.log('converged', centroidsfound, converged, newcentroids, centroids);\n  return {\n    newcentroids: newcentroids,\n    converged: converged,\n    nextIteration: iterationCount + 1 \n  };\n};"
            },
            "nodeCannotBeReplaced": true,
            "showFormOnlyInPopup": true,
            "useInCompositionOnly": false,
            "isRunOnStart": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "0934003b-1022-4bd0-aba9-db1425d64ced",
          "x": 7002.481385436919,
          "y": 2136.3062796165837,
          "width": 462.29624577114646,
          "height": 111.14524633572455,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "expression",
            "formValues": {
              "expression": "calculate_centroids(clusters,centroids,iterationCount)",
              "inputType": "number"
            },
            "showFormOnlyInPopup": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "21d97ca7-019a-47d5-9c8a-c9da448487ee",
          "x": 7715.462781449716,
          "y": 2210.149928905682,
          "width": 120.00040594723339,
          "height": 271.9999562915616,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "show-input",
            "formValues": {
              "name": "",
              "data-type": "default"
            },
            "initializeOnStartFlow": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "50eef179-242e-40cb-9d36-68a85ccccfc5",
          "x": 8227.26873270523,
          "y": 2230.4184457324804,
          "width": 150,
          "height": 150,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "if-condition",
            "formValues": {
              "Mode": "expression",
              "expression": "converged == true",
              "inputType": "boolean"
            }
          }
        },
        {
          "id": "308d7104-2a78-448b-8b13-9fb1496f17ac",
          "x": 8591.960083322982,
          "y": 2356.8842461188474,
          "width": 200,
          "height": 112,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "expression",
            "formValues": {
              "expression": "newcentroids",
              "inputType": "number"
            },
            "showFormOnlyInPopup": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "60e86642-ddd3-42a1-8dfa-79374effa93d",
          "x": 9038.650722580649,
          "y": 2372.1023257293264,
          "width": 200,
          "height": 64,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "set-array-variable",
            "formValues": {
              "variableName": "centroids"
            },
            "nodeCannotBeReplaced": false,
            "showFormOnlyInPopup": true,
            "useInCompositionOnly": false
          }
        },
        {
          "id": "044da6a1-974d-42fe-85dd-5058d7ef43d9",
          "x": 5377.135579848421,
          "y": 1838.3030479835184,
          "width": 200,
          "height": 112,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "expression",
            "formValues": {
              "expression": "centroids",
              "inputType": "number"
            },
            "showFormOnlyInPopup": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "857c7840-b47b-415e-a3e8-9a9d03ababe3",
          "x": 5602.437274145248,
          "y": 1703.9978529280963,
          "width": 50,
          "height": 50,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "summing-junction"
          }
        },
        {
          "id": "a3a7e41f-f95a-485f-85cf-de31e0a20f39",
          "x": 5703.010130615032,
          "y": 2024.5313950487891,
          "width": 979.4172478500905,
          "height": 389.7487833543769,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "annotation",
            "formValues": {
              "annotation": "k-means algorithm : \n- Fill clusters by assign each point to the \"closest\" centroid \n- Calculate new centroids (use centre of clusters)\n- Check if new centroids equal the previous centroids\n- If yes: then stop",
              "fontSize": "37.6",
              "fontWeight": "false"
            },
            "isSettingsPopup": true,
            "nodeCannotBeReplaced": true,
            "isAnnotation": true
          }
        },
        {
          "id": "b460f627-e6c1-4236-832f-789da2a7ab9a",
          "x": 4690.705964666127,
          "y": 2932.6034103668485,
          "width": 497.3528357296998,
          "height": 216.81059916859294,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "annotation",
            "formValues": {
              "annotation": "Escape hatches for assigning points to closest centroids , calculating new centroids and checking if old centroids equal the new centroids",
              "fontSize": "24.1",
              "fontWeight": "false"
            },
            "isSettingsPopup": true,
            "nodeCannotBeReplaced": true,
            "isAnnotation": true
          }
        },
        {
          "id": "be2b1562-842a-4373-ac70-a601789c1725",
          "x": 4297.9383006443095,
          "y": 1098.0292244361813,
          "width": 120.00000984223308,
          "height": 84.00000688956315,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "variable",
            "formValues": {
              "variableName": "iterationCount",
              "initialValue": "0",
              "fieldType": "value",
              "fieldValueType": "number"
            },
            "isVariable": true,
            "nodeCannotBeReplaced": true
          }
        },
        {
          "id": "f5d98b6a-f894-496d-9597-6ae58c263fe7",
          "x": 7675.026955717727,
          "y": 2034.096635207233,
          "width": 200,
          "height": 112.0001220703125,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "expression",
            "formValues": {
              "expression": "nextIteration",
              "inputType": "number"
            },
            "showFormOnlyInPopup": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "a7fc22c0-1e33-43c0-aa41-dae551926d70",
          "x": 8006.663792802744,
          "y": 2026.4248504552354,
          "width": 200.00048828125,
          "height": 128,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "set-variable",
            "formValues": {
              "variableName": "iterationCount"
            },
            "nodeCannotBeReplaced": false,
            "showFormOnlyInPopup": false,
            "useInCompositionOnly": false
          }
        },
        {
          "id": "11d8c68e-1bc1-4665-aa22-c205b602d367",
          "x": 3637.8298140155507,
          "y": 1688.4767414491473,
          "width": 200,
          "height": 128,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "reset-variable",
            "formValues": {
              "variableName": "iterationCount"
            },
            "nodeCannotBeReplaced": false,
            "showFormOnlyInPopup": false,
            "useInCompositionOnly": false
          }
        },
        {
          "id": "ec2f9ba6-9436-415e-8bf8-3b0f5a698b84",
          "x": 9115.057168820947,
          "y": 2753.445610625141,
          "width": 400,
          "height": 400,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "iframe-html-node",
            "formValues": {
              "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Plot visualization</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n      .wrapper {\n        display: flex;\n        flex-direction: row;\n        gap: 4px;\n        height: 100vh;\n        align-items: center;\n        justify-content: center;\n        padding: 4px;\n      }\n    </style>\n  </head>\n  <body class=\"bg-white\">\n    <div class=\"min-h-screen flex wrapper\" id=\"inner\">\n      <svg\n        id=\"svg\"\n        class=\"object-cover h-full w-full\"\n        viewbox=\"0 0 1200 1200\"\n      ></svg>\n    </div>\n\n    <script>\n      // Define the colors for the clusters .. borrowed the d3-palette colors observable10\n      let colors = [\n        '#4269d0',\n        '#efb118',\n        '#ff725c',\n        '#6cc5b0',\n        '#3ca951',\n        '#ff8ab7',\n        '#a463f2',\n        '#97bbf5',\n        '#9c6b4e',\n        '#9498a0',\n      ];\n      function getColor(index) {\n        return colors[index % colors.length];\n      }\n\n      function getDarkenColor(index) {\n        // darken color with pure javascript\n        let color = colors[index % colors.length];\n        let r = parseInt(color.slice(1, 3), 16);\n        let g = parseInt(color.slice(3, 5), 16);\n        let b = parseInt(color.slice(5, 7), 16);\n\n        const newColor = [r, g, b].map((c) => parseInt((c * 0.75).toFixed(0)));\n\n        return `#${newColor[0].toString(16)}${newColor[1].toString(\n          16\n        )}${newColor[2].toString(16)}`;\n      }\n      // Initialize the global variable \"input\"\n      window.input = window.input;\n      let inputstream = [];\n      let initialized = false;\n      let elements = [];\n\n      let svg = document.getElementById('svg');\n      // Function to rerender the UI\n      function rerenderUI() {\n        if (!initialized && window['createElement']) {\n          initialized = true;\n        }\n        let documentFragment = document.createDocumentFragment();\n        let circles = [];\n        if (window.input !== undefined) {\n          if (Array.isArray(window.input)) {\n            if (true) {\n              window.input.forEach((element, index) => {\n                if (Array.isArray(element)) {\n                  \n                  let circle = document.createElementNS(\n                    'http://www.w3.org/2000/svg',\n                    'circle'\n                  );\n                  circle.setAttribute('cx', element[0] * 10 + 100);\n                  circle.setAttribute('cy', element[1] * 10 + 100);\n                  circle.setAttribute('r', 50);\n                  circle.setAttribute('fill', getColor(index));\n                  documentFragment.appendChild(circle);\n                }\n              });\n              \n            }\n          }\n        }\n        svg.replaceChildren(documentFragment);\n      }\n\n      // Attach the rerenderUI function to the global onExecute method\n      window.onExecute = rerenderUI;\n\n      rerenderUI();\n    </script>\n  </body>\n</html>\n",
              "aiprompt": ""
            },
            "showFormOnlyInPopup": true,
            "initializeOnStartFlow": true
          }
        },
        {
          "id": "e370f15f-1236-4ce3-80b1-c03082dc303e",
          "x": 8392.576246179686,
          "y": 2894.4562089561664,
          "width": 200,
          "height": 116,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "observe-variable",
            "formValues": {
              "variableName": "centroids"
            }
          }
        },
        {
          "id": "f59f81b7-c03d-454a-b64e-aad6620ff46e",
          "x": 5464.779174840456,
          "y": 924.3071501114295,
          "width": 400,
          "height": 400,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "iframe-html-node",
            "formValues": {
              "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Plot visualization</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style>\n      .wrapper {\n        display: flex;\n        flex-direction: row;\n        gap: 4px;\n        height: 100vh;\n        align-items: center;\n        justify-content: center;\n        padding: 4px;\n      }\n    </style>\n  </head>\n  <body class=\"bg-white\">\n    <div class=\"min-h-screen flex wrapper\" id=\"inner\">\n      <svg\n        id=\"svg\"\n        class=\"object-cover h-full w-full\"\n        viewbox=\"0 0 1200 1200\"\n      ></svg>\n    </div>\n\n    <script>\n      // Initialize the global variable \"input\"\n      window.input = window.input;\n      let inputstream = [];\n      let initialized = false;\n      let elements = [];\n\n      let svg = document.getElementById('svg');\n      // Function to rerender the UI\n      function rerenderUI() {\n        if (!initialized && window['createElement']) {\n          initialized = true;\n        }\n        let documentFragment = document.createDocumentFragment();\n        let circles = [];\n        if (window.input !== undefined) {\n          if (Array.isArray(window.input)) {\n            \n              window.input.forEach((element, index) => {\n                if (Array.isArray(element)) {\n                  \n                  let circle = document.createElementNS(\n                    'http://www.w3.org/2000/svg',\n                    'circle'\n                  );\n                  circle.setAttribute('cx', element[0] * 10 + 100);\n                  circle.setAttribute('cy', element[1] * 10 + 100);\n                  circle.setAttribute('r', 25);\n                  circle.setAttribute('fill', \"#000000\");\n                  documentFragment.appendChild(circle);\n                }\n              });\n          }\n        }\n        svg.replaceChildren(documentFragment);\n      }\n\n      // Attach the rerenderUI function to the global onExecute method\n      window.onExecute = rerenderUI;\n\n      rerenderUI();\n    </script>\n  </body>\n</html>\n",
              "aiprompt": ""
            },
            "showFormOnlyInPopup": true,
            "initializeOnStartFlow": true
          }
        },
        {
          "id": "472fd563-dd51-4ce1-8b2b-756acb532d7d",
          "x": 4820.494567308047,
          "y": 1058.863395484845,
          "width": 200,
          "height": 116,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "observe-variable",
            "formValues": {
              "variableName": "data"
            }
          }
        },
        {
          "id": "e4771889-b12b-4895-8617-b1559c8a8fdc",
          "x": 8806.206945332018,
          "y": 2921.1614064965597,
          "width": 120.0000372376446,
          "height": 271.9999634204738,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "show-input",
            "formValues": {
              "name": "",
              "data-type": "default"
            },
            "initializeOnStartFlow": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "878f4c71-d096-4be6-a1e8-b2443fd1aed5",
          "x": 3317.414753722261,
          "y": 1720.7047824479412,
          "width": 200,
          "height": 55,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "load-csv-file",
            "showFormOnlyInPopup": true,
            "formValues": {}
          }
        },
        {
          "id": "b2f2306d-9345-4462-bb13-a5c95188ab8a",
          "x": 5348.938834045163,
          "y": 2948.540965660782,
          "width": 294.609375,
          "height": 136,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "register-expression-function-node",
            "formValues": {
              "functionName": "init_centroids",
              "customFunctionCode": "(points,k) => {\n  let centroids = [];\n\n  const getDistance = (point,point2) => Math.sqrt(\n      Math.pow(point[0] - point2[0], 2) + Math.pow(point[1] - point2[1], 2)\n    );  \n  /*\n     - get center of points\n     - sort points by distance\n     - take first k points that have largest distance\n  */\n  let minX = undefined;\n  let minY = undefined;\n  let maxX = undefined;\n  let maxY = undefined;\n  points.forEach((point) => {\n    if (minX === undefined || point[0] < minX) {\n      minX = point[0];\n    }\n    if (maxX === undefined || point[0] > maxX) {\n      maxX = point[0];\n    }\n    if (minY === undefined || point[1] < minY) {\n      minY = point[1];\n    }\n    if (maxY === undefined || point[1] > maxY) {\n      maxY = point[1];\n    }\n    /* newcentroids.push([sumX / cluster.length, sumY / cluster.length]);*/\n  });\n  let centerX = (minX + maxX) / 2;\n  let centerY = (minY + maxY) / 2;\n\n  let sortedPoints = points.toSorted((a,b) => {\n    const adistance = getDistance(a,[centerX,centerY]);\n    const bdistance = getDistance(b,[centerX,centerY]);\n    return bdistance - adistance;\n  });\n\n  sortedPoints.forEach((point,index) => {\n    if (index < k) {\n      centroids.push(point);\n    }\n  });\n\n  return centroids;\n};"
            },
            "nodeCannotBeReplaced": true,
            "showFormOnlyInPopup": true,
            "useInCompositionOnly": false,
            "isRunOnStart": true,
            "isSettingsPopup": true
          }
        },
        {
          "id": "eab6e4a7-1e12-4bbb-b7ef-809b3ef43ca5",
          "x": 5831.680464640531,
          "y": 1739.6576691336236,
          "endX": 5924.359698349896,
          "endY": 1821.7883444118866,
          "startNodeId": "8a5cfde7-22fd-4f25-8af4-4540f69e3c8f",
          "endNodeId": "1d1b2896-c11d-4ddd-a4b8-1d3b77e493ba",
          "startThumbName": "output2",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "e03baa33-862d-4ea1-9712-ab81e08a550e",
          "x": 5831.680464640531,
          "y": 1689.6576691336236,
          "endX": 5925.051508209566,
          "endY": 1660.4898975210604,
          "startNodeId": "8a5cfde7-22fd-4f25-8af4-4540f69e3c8f",
          "endNodeId": "ab054f77-2e88-49ec-afe6-848468c0be3c",
          "startThumbName": "output1",
          "endThumbName": "array",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "6a09a070-9bd1-4bd5-bbd0-844769d30f62",
          "x": 6125.051508209566,
          "y": 1662.4898975210604,
          "endX": 6314.426498783223,
          "endY": 1668.9888114460255,
          "startNodeId": "ab054f77-2e88-49ec-afe6-848468c0be3c",
          "endNodeId": "5a697c29-8f0b-4b8f-b251-29d389d4b606",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "74dfb159-7b16-4027-b2d0-c3fb755b008a",
          "x": 6782.0193265782045,
          "y": 1668.9888114460255,
          "endX": 6997.1068187887195,
          "endY": 1671.399733371719,
          "startNodeId": "5a697c29-8f0b-4b8f-b251-29d389d4b606",
          "endNodeId": "d074bb8f-1693-45b6-80ab-e5ed4557c4fa",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "e05858fb-5e14-444e-8685-b44cdd5129f9",
          "x": 7117.106828630953,
          "y": 1671.399733371719,
          "endX": 7381.717938333617,
          "endY": 1668.7516026961162,
          "startNodeId": "d074bb8f-1693-45b6-80ab-e5ed4557c4fa",
          "endNodeId": "d68aeeb6-d2b2-4503-a704-7d21334b9c7f",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "40767bbd-3b06-4afb-a791-31254aac14cc",
          "x": 6782.0193265782045,
          "y": 1668.9888114460255,
          "endX": 7002.481385436919,
          "endY": 2191.878902784446,
          "startNodeId": "5a697c29-8f0b-4b8f-b251-29d389d4b606",
          "endNodeId": "0934003b-1022-4bd0-aba9-db1425d64ced",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "71d16b29-ff93-4ef8-a81d-fc4ef10dc69b",
          "x": 7464.777631208065,
          "y": 2191.878902784446,
          "endX": 7715.462781449716,
          "endY": 2240.149928905682,
          "startNodeId": "0934003b-1022-4bd0-aba9-db1425d64ced",
          "endNodeId": "21d97ca7-019a-47d5-9c8a-c9da448487ee",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "5b57afe5-bdcd-4fbf-bb3a-3ebae7a3bc92",
          "x": 7835.463187396949,
          "y": 2240.149928905682,
          "endX": 8227.26873270523,
          "endY": 2305.4184457324804,
          "startNodeId": "21d97ca7-019a-47d5-9c8a-c9da448487ee",
          "endNodeId": "50eef179-242e-40cb-9d36-68a85ccccfc5",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "2fab76ba-2731-4cef-8924-ecd1188ca1fb",
          "x": 8302.26873270523,
          "y": 2380.4184457324804,
          "endX": 8591.960083322982,
          "endY": 2412.8842461188474,
          "startNodeId": "50eef179-242e-40cb-9d36-68a85ccccfc5",
          "endNodeId": "308d7104-2a78-448b-8b13-9fb1496f17ac",
          "startThumbName": "failure",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "705c7eb3-fe63-4a5d-9432-330b3be57cb6",
          "x": 8791.960083322982,
          "y": 2412.8842461188474,
          "endX": 9038.650722580649,
          "endY": 2402.1023257293264,
          "startNodeId": "308d7104-2a78-448b-8b13-9fb1496f17ac",
          "endNodeId": "60e86642-ddd3-42a1-8dfa-79374effa93d",
          "startThumbName": "output",
          "endThumbName": "array",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "db375f3c-d3fe-43b2-a580-3f860fadad22",
          "x": 9238.650722580649,
          "y": 2404.1023257293264,
          "endX": 5377.135579848421,
          "endY": 1894.3030479835184,
          "startNodeId": "60e86642-ddd3-42a1-8dfa-79374effa93d",
          "endNodeId": "044da6a1-974d-42fe-85dd-5058d7ef43d9",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "9f3d40cc-43bb-40db-b1a2-0e1a257a5388",
          "x": 5577.135579848421,
          "y": 1894.3030479835184,
          "endX": 5627.437274145248,
          "endY": 1763.9978529280963,
          "startNodeId": "044da6a1-974d-42fe-85dd-5058d7ef43d9",
          "endNodeId": "857c7840-b47b-415e-a3e8-9a9d03ababe3",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "08ab0691-205f-46e6-8b0c-7e01da76b7b5",
          "x": 5212.936333470498,
          "y": 1742.9236203121095,
          "endX": 5592.457010085521,
          "endY": 1730.1730662328819,
          "startNodeId": "ea7bdf4e-6c33-48f4-b633-bff38ffb2a3c",
          "endNodeId": "857c7840-b47b-415e-a3e8-9a9d03ababe3",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "ec9295bf-c9fa-4e61-a761-d9e802fe8147",
          "x": 5627.437274145248,
          "y": 1728.9978529280963,
          "endX": 5721.680464640531,
          "endY": 1714.6576691336236,
          "startNodeId": "857c7840-b47b-415e-a3e8-9a9d03ababe3",
          "endNodeId": "8a5cfde7-22fd-4f25-8af4-4540f69e3c8f",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "Straight",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "17606be6-5c55-4abe-94fb-220c188968be",
          "x": 7464.777631208065,
          "y": 2191.878902784446,
          "endX": 7675.026955717727,
          "endY": 2090.096696242389,
          "startNodeId": "0934003b-1022-4bd0-aba9-db1425d64ced",
          "endNodeId": "f5d98b6a-f894-496d-9597-6ae58c263fe7",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "08e6a922-39f9-46a6-a19d-6e49c94b809c",
          "x": 7875.026955717727,
          "y": 2090.096696242389,
          "endX": 8006.663792802744,
          "endY": 2090.424850455235,
          "startNodeId": "f5d98b6a-f894-496d-9597-6ae58c263fe7",
          "endNodeId": "a7fc22c0-1e33-43c0-aa41-dae551926d70",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "e877d2e7-6102-443b-a2a9-12003cd3b6a6",
          "x": 8592.576246179686,
          "y": 2952.4562089561664,
          "endX": 8806.206945332018,
          "endY": 2951.1614064965597,
          "startNodeId": "e370f15f-1236-4ce3-80b1-c03082dc303e",
          "endNodeId": "e4771889-b12b-4895-8617-b1559c8a8fdc",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "ab9de524-e39d-460d-bc9b-ce78f2346bf7",
          "x": 5020.494567308047,
          "y": 1116.863395484845,
          "endX": 5464.779174840456,
          "endY": 1124.3071501114296,
          "startNodeId": "472fd563-dd51-4ce1-8b2b-756acb532d7d",
          "endNodeId": "f59f81b7-c03d-454a-b64e-aad6620ff46e",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "d203878c-8c7e-4e18-96e2-efee31ca152a",
          "x": 8926.206982569664,
          "y": 2951.1614064965597,
          "endX": 9115.057168820947,
          "endY": 2953.445610625141,
          "startNodeId": "e4771889-b12b-4895-8617-b1559c8a8fdc",
          "endNodeId": "ec2f9ba6-9436-415e-8bf8-3b0f5a698b84",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "88d5f2fa-4cc3-40ef-9712-4f58237a6bf9",
          "x": 3837.8298140155507,
          "y": 1752.4767414491473,
          "endX": 4026.857581870388,
          "endY": 1742.8127032300897,
          "startNodeId": "11d8c68e-1bc1-4665-aa22-c205b602d367",
          "endNodeId": "2b646b69-3b5d-41b0-b1bf-65cff9b6898b",
          "startThumbName": "output",
          "endThumbName": "array",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "ff873ac3-e034-4ab7-b3fe-68b23912cc23",
          "x": 3517.414753722261,
          "y": 1750.7047824479412,
          "endX": 3637.8298140155507,
          "endY": 1752.4767414491473,
          "startNodeId": "878f4c71-d096-4be6-a1e8-b2443fd1aed5",
          "endNodeId": "11d8c68e-1bc1-4665-aa22-c205b602d367",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "94f00bc8-c461-4463-aa28-57e797d948c9",
          "x": 4380.155653025271,
          "y": 1681.965636263108,
          "width": 407.8221107675463,
          "height": 107.15729480722007,
          "nodeType": "Shape",
          "nodeInfo": {
            "type": "expression",
            "formValues": {
              "expression": "init_centroids(data,k)",
              "inputType": "number"
            },
            "showFormOnlyInPopup": true,
            "isSettingsPopup": true,
            "taskType": "expression"
          }
        },
        {
          "id": "38e1d653-0357-4b5f-8cb0-72af0995bd60",
          "x": 4787.977763792817,
          "y": 1735.544283666718,
          "endX": 5012.936333470498,
          "endY": 1740.9236203121095,
          "startNodeId": "94f00bc8-c461-4463-aa28-57e797d948c9",
          "endNodeId": "ea7bdf4e-6c33-48f4-b633-bff38ffb2a3c",
          "startThumbName": "output",
          "endThumbName": "array",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        },
        {
          "id": "5b62e316-5435-43e1-bdcf-a1d9f81e255f",
          "x": 4226.8575818703885,
          "y": 1744.8127032300897,
          "endX": 4380.155653025271,
          "endY": 1735.544283666718,
          "startNodeId": "2b646b69-3b5d-41b0-b1bf-65cff9b6898b",
          "endNodeId": "94f00bc8-c461-4463-aa28-57e797d948c9",
          "startThumbName": "output",
          "endThumbName": "input",
          "lineType": "BezierCubic",
          "nodeType": "Connection",
          "layer": 1,
          "nodeInfo": {}
        }
      ]
    }
  },
  "compositions": {}
}